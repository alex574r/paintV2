/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package OpcionesEmergentes;

import java.awt.Color;
import javax.swing.JColorChooser;
import paint.CustomDrawPanel;

/**
 *
 * @author alex5
 */
public class OpcionesTrazo extends javax.swing.JDialog {

    private CustomDrawPanel drawPanel;

    public OpcionesTrazo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public OpcionesTrazo(CustomDrawPanel drawPanel) {
        super((java.awt.Frame) null, true); // Cambiado para que sea modal
        this.drawPanel = drawPanel;
        initComponents(); // Inicializar componentes
        opcioes_de_inicio();
        this.setLocationRelativeTo(null);
    }

    public void opcioes_de_inicio() {
        /* 
        sliderPunteado.setEnabled(false);
        togglePunteado.setSelected(false);
         */
        if (drawPanel != null) {
            // Configuraci√≥n inicial del checkbox de relleno
            boolean estadoSlider = drawPanel.getAtributosActuales().isContornoActivo();
            checkContorno.setSelected(estadoSlider);
            boolean estadoSliderpPunteado = drawPanel.getAtributosActuales().isStrokePunteado();
            checkContornoPunteado.setSelected(estadoSliderpPunteado);

            if (estadoSliderpPunteado) {
                SliderPunteado.setEnabled(true);
            } else {
                SliderPunteado.setEnabled(false);
            }
            Color colorContorno = drawPanel.getColorContorno();
            if (drawPanel.isContornoActivo()) {
                jCheckBox1.setSelected(true);
                jPanel2.setBackground(colorContorno);
            }else{
                jCheckBox1.setSelected(false);
                jPanel2.setBackground(colorContorno);
            }

        } else {
            System.err.println("Advertencia: drawPanel es null en componentesDeIncio()");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        SliderAnchoContorno = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        checkContornoPunteado = new javax.swing.JCheckBox();
        SliderPunteado = new javax.swing.JSlider();
        lblPunteado = new javax.swing.JLabel();
        checkContorno = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SliderAnchoContorno.setForeground(new java.awt.Color(0, 0, 0));
        SliderAnchoContorno.setMajorTickSpacing(2);
        SliderAnchoContorno.setMaximum(20);
        SliderAnchoContorno.setMinimum(1);
        SliderAnchoContorno.setMinorTickSpacing(2);
        SliderAnchoContorno.setPaintLabels(true);
        SliderAnchoContorno.setPaintTicks(true);
        SliderAnchoContorno.setSnapToTicks(true);
        SliderAnchoContorno.setValue(1);
        SliderAnchoContorno.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                SliderAnchoContornoAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        SliderAnchoContorno.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderAnchoContornoStateChanged(evt);
            }
        });
        jPanel1.add(SliderAnchoContorno, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 330, -1));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Estilo del Trazo");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));

        checkContornoPunteado.setForeground(new java.awt.Color(0, 0, 0));
        checkContornoPunteado.setText("Estilo con Punteo");
        checkContornoPunteado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkContornoPunteadoActionPerformed(evt);
            }
        });
        jPanel1.add(checkContornoPunteado, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, 160, -1));

        SliderPunteado.setForeground(new java.awt.Color(0, 0, 0));
        SliderPunteado.setMajorTickSpacing(2);
        SliderPunteado.setMaximum(20);
        SliderPunteado.setMinimum(1);
        SliderPunteado.setMinorTickSpacing(2);
        SliderPunteado.setPaintLabels(true);
        SliderPunteado.setPaintTicks(true);
        SliderPunteado.setSnapToTicks(true);
        SliderPunteado.setValue(5);
        SliderPunteado.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderPunteadoStateChanged(evt);
            }
        });
        jPanel1.add(SliderPunteado, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, 330, 50));

        lblPunteado.setForeground(new java.awt.Color(0, 0, 0));
        lblPunteado.setText("Punteado: 5px");
        jPanel1.add(lblPunteado, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, 150, 20));

        checkContorno.setForeground(new java.awt.Color(0, 0, 0));
        checkContorno.setText("Contorno");
        checkContorno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkContornoActionPerformed(evt);
            }
        });
        jPanel1.add(checkContorno, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 110, -1));

        jButton1.setText("Aceptar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 510, 290, 50));
        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, 40, 40));

        jButton2.setText("Elegir Color");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, 120, -1));

        jCheckBox1.setForeground(new java.awt.Color(0, 0, 0));
        jCheckBox1.setText("Color de Contorno");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 610));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SliderAnchoContornoAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_SliderAnchoContornoAncestorAdded

    }//GEN-LAST:event_SliderAnchoContornoAncestorAdded

    private void SliderAnchoContornoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderAnchoContornoStateChanged
        int value = SliderAnchoContorno.getValue();
        drawPanel.setAnchoContorno(value);
    }//GEN-LAST:event_SliderAnchoContornoStateChanged

    private void SliderPunteadoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderPunteadoStateChanged
        int value = SliderPunteado.getValue();
        lblPunteado.setText("Punteado: " + value + "px");
        float[] patron = {value, value};
        drawPanel.setPatronPunteado(patron);
    }//GEN-LAST:event_SliderPunteadoStateChanged

    private void checkContornoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkContornoActionPerformed
        drawPanel.setContorno(checkContorno.isSelected());
        drawPanel.repaint();
    }//GEN-LAST:event_checkContornoActionPerformed

    private void checkContornoPunteadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkContornoPunteadoActionPerformed
        boolean activado = checkContornoPunteado.isSelected();
        drawPanel.getAtributosActuales().setStrokePunteado(activado);
        SliderPunteado.setEnabled(activado);
        drawPanel.repaint();
    }//GEN-LAST:event_checkContornoPunteadoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Color color = JColorChooser.showDialog(this, "Color de Contorno", Color.BLACK);
        if (color != null) {
            jPanel2.setBackground(color);
            drawPanel.setColorContorno(color);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        drawPanel.setContorno(jCheckBox1.isSelected());
        drawPanel.repaint();
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OpcionesTrazo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OpcionesTrazo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OpcionesTrazo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OpcionesTrazo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                OpcionesTrazo dialog = new OpcionesTrazo(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider SliderAnchoContorno;
    private javax.swing.JSlider SliderPunteado;
    private javax.swing.JCheckBox checkContorno;
    private javax.swing.JCheckBox checkContornoPunteado;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblPunteado;
    // End of variables declaration//GEN-END:variables
}
